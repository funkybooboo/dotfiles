#!/usr/bin/env bash

# nstall - A script to manage packages via multiple package managers.
# TODO does not work right now

set -euo pipefail
IFS=$'\n\t'

declare -A managers
declare -A installed

# Package manager detection
detect_managers() {
    if command -v apt >/dev/null 2>&1; then
        managers[apt]=1
    fi
    if command -v npm >/dev/null 2>&1; then
        managers[npm]=1
    fi
    if command -v flatpak >/dev/null 2>&1; then
        managers[flatpak]=1
    fi
    if command -v pacman >/dev/null 2>&1; then
        managers[pacman]=1
    fi
    if command -v brew >/dev/null 2>&1; then
        managers[brew]=1
    fi
    if command -v snap >/dev/null 2>&1; then
        managers[snap]=1
    fi
    if command -v dnf >/dev/null 2>&1; then
        managers[dnf]=1
    fi
}

# List installed packages by each package manager
list_installed() {
    echo "Installed packages by available managers:"

    [[ ${managers[apt]+_} ]] && {
        echo "--- apt ---"
        dpkg -l | awk '/^ii/ {print $2}' || true
    }

    [[ ${managers[npm]+_} ]] && {
        echo "--- npm ---"
        npm list -g --depth=0 | awk -F' ' '/node_modules/ {print $2}' || true
    }

    [[ ${managers[flatpak]+_} ]] && {
        echo "--- flatpak ---"
        flatpak list --app || true
    }

    [[ ${managers[pacman]+_} ]] && {
        echo "--- pacman ---"
        pacman -Q || true
    }

    [[ ${managers[brew]+_} ]] && {
        echo "--- brew ---"
        brew list || true
    }

    [[ ${managers[snap]+_} ]] && {
        echo "--- snap ---"
        snap list || true
    }

    [[ ${managers[dnf]+_} ]] && {
        echo "--- dnf ---"
        dnf list installed || true
    }
}

# Install packages using a selected package manager
install_package() {
    local pkg_name=$1
    echo "Select package manager to install '$pkg_name':"

    local i=1
    for manager in "${!managers[@]}"; do
        echo "$i    $pkg_name    $manager"
        ((i++))
    done

    read -rp "Select the manager number: " choice
    case $choice in
        [1-9]*)
            local selected_manager
            selected_manager=$(echo "${!managers[@]}" | awk -v n="$choice" '{print $n}')

            case $selected_manager in
                apt)
                    sudo apt install "$pkg_name" || echo "Failed to install '$pkg_name' with apt"
                    ;;
                npm)
                    sudo npm install -g "$pkg_name" || echo "Failed to install '$pkg_name' with npm"
                    ;;
                flatpak)
                    sudo flatpak install "$pkg_name" || echo "Failed to install '$pkg_name' with flatpak"
                    ;;
                pacman)
                    sudo pacman -S "$pkg_name" || echo "Failed to install '$pkg_name' with pacman"
                    ;;
                brew)
                    brew install "$pkg_name" || echo "Failed to install '$pkg_name' with brew"
                    ;;
                snap)
                    sudo snap install "$pkg_name" || echo "Failed to install '$pkg_name' with snap"
                    ;;
                dnf)
                    sudo dnf install "$pkg_name" || echo "Failed to install '$pkg_name' with dnf"
                    ;;
                *)
                    echo "Invalid selection."
                    ;;
            esac
            ;;
        *)
            echo "Invalid choice."
            ;;
    esac
}

# Remove packages using a selected package manager
remove_package() {
    local pkg_name=$1
    echo "Select package manager to remove '$pkg_name':"

    local i=1
    for manager in "${!managers[@]}"; do
        echo "$i    $pkg_name    $manager"
        ((i++))
    done

    read -rp "Select the manager number: " choice
    case $choice in
        [1-9]*)
            local selected_manager
            selected_manager=$(echo "${!managers[@]}" | awk -v n="$choice" '{print $n}')

            case $selected_manager in
                apt)
                    sudo apt remove "$pkg_name" || echo "Failed to remove '$pkg_name' with apt"
                    ;;
                npm)
                    sudo npm uninstall -g "$pkg_name" || echo "Failed to remove '$pkg_name' with npm"
                    ;;
                flatpak)
                    sudo flatpak uninstall "$pkg_name" || echo "Failed to remove '$pkg_name' with flatpak"
                    ;;
                pacman)
                    sudo pacman -R "$pkg_name" || echo "Failed to remove '$pkg_name' with pacman"
                    ;;
                brew)
                    brew uninstall "$pkg_name" || echo "Failed to remove '$pkg_name' with brew"
                    ;;
                snap)
                    sudo snap remove "$pkg_name" || echo "Failed to remove '$pkg_name' with snap"
                    ;;
                dnf)
                    sudo dnf remove "$pkg_name" || echo "Failed to remove '$pkg_name' with dnf"
                    ;;
                *)
                    echo "Invalid selection."
                    ;;
            esac
            ;;
        *)
            echo "Invalid choice."
            ;;
    esac
}

# Query if package is installed
query_package() {
    local pkg_name=$1
    echo "Checking for '$pkg_name' across available managers:"

    local i=1
    for manager in "${!managers[@]}"; do
        echo "$i    $pkg_name    $manager"
        ((i++))
    done
}

# Update packages
update_packages() {
    for manager in "${!managers[@]}"; do
        case $manager in
            apt)
                sudo apt update && sudo apt upgrade -y || echo "Failed to update with apt"
                ;;
            npm)
                sudo npm update -g || echo "Failed to update with npm"
                ;;
            flatpak)
                sudo flatpak update -y || echo "Failed to update with flatpak"
                ;;
            pacman)
                sudo pacman -Syu || echo "Failed to update with pacman"
                ;;
            brew)
                brew update && brew upgrade || echo "Failed to update with brew"
                ;;
            snap)
                sudo snap refresh || echo "Failed to update with snap"
                ;;
            dnf)
                sudo dnf upgrade || echo "Failed to update with dnf"
                ;;
            *)
                echo "Unknown package manager: $manager"
                ;;
        esac
    done
}

# Main command line argument parsing
usage() {
    cat <<EOF
Usage: $0 [OPTIONS] [PACKAGE_NAME]

Options:
  -i, --install <package_name>      Install package
  -r, --remove <package_name>       Remove package
  -u, --update                      Update all packages
  -l, --list                        List installed packages
  -q, --query <package_name>        Query if package is installed
  -h, --help                        Show this help message

Examples:
  $0 -i tldr
  $0 -r tldr
  $0 -u
  $0 -l
  $0 -q tldr
EOF
    exit 1
}

if [[ $# -eq 0 ]]; then
    usage
fi

# Detect available package managers
detect_managers

case "$1" in
    -i|--install)
        if [[ $# -ne 2 ]]; then
            echo "ERROR: --install requires a package name."
            exit 1
        fi
        install_package "$2"
        ;;
    -r|--remove)
        if [[ $# -ne 2 ]]; then
            echo "ERROR: --remove requires a package name."
            exit 1
        fi
        remove_package "$2"
        ;;
    -u|--update)
        update_packages
        ;;
    -l|--list)
        list_installed
        ;;
    -q|--query)
        if [[ $# -ne 2 ]]; then
            echo "ERROR: --query requires a package name."
            exit 1
        fi
        query_package "$2"
        ;;
    -h|--help)
        usage
        ;;
    *)
        echo "Unknown option: $1"
        usage
        ;;
esac
