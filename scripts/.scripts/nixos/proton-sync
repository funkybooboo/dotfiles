#!/run/current-system/sw/bin/bash
#
# proton-sync — Generic bisync between a local dir and a Proton Drive remote,
#               including automatic 2FA refresh, draft-override, retries,
#               no-update-modtime, and API throttling.
#
set -euo pipefail

timestamp() {
  date +'%Y-%m-%dT%H:%M:%S%:z'
}

if [[ $# -ne 2 ]]; then
  echo "Usage: $0 LOCAL_DIR REMOTE_PATH" >&2
  exit 1
fi

LOCAL_DIR="$1"
REMOTE_PATH="$2"
HOME_DIR="${HOME}"

# 0) Refresh Proton Drive 2FA
if ! "${HOME_DIR}/.local/bin/update-rclone-2fa"; then
  echo "$(timestamp) ERROR: Failed to update Proton 2FA — aborting"
  exit 1
fi
echo "$(timestamp) INFO: Proton 2FA refreshed successfully"

# Build a filesystem-safe identifier for caching
identifier=$(printf "%s_%s" "$LOCAL_DIR" "$REMOTE_PATH" \
  | sed 's|[^a-zA-Z0-9]|_|g')

CACHE_BASE="${HOME_DIR}/.cache/rclone/bisync"
LOCKFILE="${CACHE_BASE}/${identifier}.lck"
PATH1_LIST="${CACHE_BASE}/${identifier}.path1.lst"
PATH2_LIST="${CACHE_BASE}/${identifier}.path2.lst"

# Retry settings
MAX_ATTEMPTS=3
SLEEP_BETWEEN=30   # seconds

# 1) Prepare cache dir
mkdir -p "${CACHE_BASE}"
chmod 755 "${CACHE_BASE}"

# 2) Ensure local directory exists
if [[ ! -d "${LOCAL_DIR}" ]]; then
  mkdir -p "${LOCAL_DIR}"
  echo "$(timestamp) INFO: Created missing local directory ${LOCAL_DIR}"
fi

# 3) Ensure remote directory exists
if ! rclone lsd "${REMOTE_PATH}" >/dev/null 2>&1; then
  rclone mkdir "${REMOTE_PATH}"
  echo "$(timestamp) INFO: Created remote directory ${REMOTE_PATH}"
fi

# 4) Clean up stale lockfile (30m or dead PID)
if [[ -f "${LOCKFILE}" ]]; then
  PID=$(grep '"PID"' "${LOCKFILE}" | sed -E 's/.*"PID": ?"([0-9]+)".*/\1/' || true)
  LOCK_TIME=$(stat -c %Y "${LOCKFILE}" || echo 0)
  AGE_MIN=$((( $(date +%s) - LOCK_TIME ) / 60 ))

  if [[ -z "$PID" ]] || ! ps -p "$PID" >/dev/null 2>&1 || [[ "$AGE_MIN" -ge 30 ]]; then
    echo "$(timestamp) WARNING: Removing stale lockfile (PID=${PID:-n/a}, Age=${AGE_MIN}m)"
    rm -f "${LOCKFILE}"
  fi
fi

# 5) Detect first-ever run
USE_RESYNC=""
if [[ ! -f "${PATH1_LIST}" || ! -f "${PATH2_LIST}" ]]; then
  USE_RESYNC="--resync"
  echo "$(timestamp) INFO: First run — initializing with --resync"
fi

# 6) Run bisync with retries
attempt=1
while true; do
  echo "$(timestamp) INFO: bisync attempt $attempt/$MAX_ATTEMPTS"
    cmd=( \
    rclone bisync \
      "${LOCAL_DIR}" \
      "${REMOTE_PATH}" \
      --delete-during \
      --verbose \
      --protondrive-replace-existing-draft=true \
      --recover \
      --resilient \
      --no-update-modtime \
      --size-only \
      --tpslimit=1 \
      --tpslimit-burst=1 \
      ${USE_RESYNC:+$USE_RESYNC} \
  )

  if "${cmd[@]}"; then
    echo "$(timestamp) INFO: bisync succeeded"
    break
  else
    echo "$(timestamp) WARNING: bisync failed on attempt $attempt"
  fi

  if (( attempt >= MAX_ATTEMPTS )); then
    echo "$(timestamp) ERROR: All $MAX_ATTEMPTS bisync attempts failed"
    exit 1
  fi

  ((attempt++))
  sleep $SLEEP_BETWEEN
done
